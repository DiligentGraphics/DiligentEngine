#include "structures.fxh"

Texture2D    g_Texture;
SamplerState g_Texture_sampler; // By convention, texture samplers must use the '_sampler' suffix

cbuffer PSConstants
{
    Constants g_Constants;
}

struct PSOutput
{
    float4 Color : SV_TARGET;
};

void main(in  GSOutput PSIn, 
          out PSOutput PSOut)
{
    float4 Color = g_Texture.Sample(g_Texture_sampler, PSIn.VSOut.UV);
    
    // Compute distance to the closest edge
    float minDist = min(PSIn.DistToEdges.x, PSIn.DistToEdges.y);
    minDist = min(minDist, PSIn.DistToEdges.z);

    float lineWidth = g_Constants.LineWidth;
    float lineIntensity = saturate((lineWidth - minDist) / lineWidth);

    float3 EdgeColor = float3(0.0, 0.0, 0.0);
    Color.rgb = lerp(Color.rgb, EdgeColor, lineIntensity);

    PSOut.Color = Color;
}
